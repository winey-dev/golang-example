# from(bucket: "sample")
#  |> range(start: -1m)
#  |> filter(fn: (r) => r["_measurement"] == "resource-stat-field-item")
#  |> filter(fn: (r) => r["_field"] == "disk-use-by-bytes")
#  |> filter(fn: (r) => r["nf_name"] == "mss-ems")
#  |> aggregateWindow( every: 10s, fn: sum)
#  |> drop(columns: ["_start","_stop","app_name","pod_name","container_name"])
#  |> group(columns: ["node_name"])
#  |> sum()
#  |> group()
#---
from(bucket: "sample")
  |> range(start: -1m)
  |> filter(fn: (r) => r["_measurement"] == "resource")
  |> filter(fn: (r) => r["_field"] == "disk-usage")
  |> group(columns: ["node_name"])
  |> drop(columns: ["_start","_stop","app_name","pod_name","container_name"])
---
from(bucket: "sample")
  |> range(start: -1m)
  |> filter(fn: (r) => r["_measurement"] == "resource")
  |> filter(fn: (r) => r["_field"] == "disk-usage")
  |> group(columns: ["node_name"])
  |> count()
---
from(bucket: "sample")
  |> range(start: -1m)
  |> filter(fn: (r) => r["_measurement"] == "resource")
  |> filter(fn: (r) => r["_field"] == "disk-usage")
  |> drop(columns: ["_start","_stop","app_name","pod_name","container_name"])
  |> group(columns: ["node_name"])
  |> pivot(rowKey: ["_time"], columnKey: ["node_name"], valueColumn: "_value")
---
from(bucket: "sample")
  |> range(start: -1m)
  |> filter(fn: (r) => r["_measurement"] == "resource")
  |> filter(fn: (r) => r["_field"] == "disk-usage")
  |> drop(columns: ["_start","_stop","app_name","pod_name","container_name"])
  |> group(columns: ["node_name"])
  |> aggregateWindow(every: 10s, fn: sum, createEmpty: false)
  |> yield(name: "sum")
  |> group()
  |> pivot(rowKey: ["_time"], columnKey: ["node_name"], valueColumn: "_value")
---
from(bucket: "sample")
  |> range(start: -1m)
  |> filter(fn: (r) => r["_measurement"] == "resource")
  |> filter(fn: (r) => r["_field"] == "disk-usage")
  |> drop(columns: ["_start","_stop","app_name","pod_name","container_name"])
  |> group(columns: ["node_name"])
  |> aggregateWindow(every: 10s, fn: sum, createEmpty: false)
  |> group()
  |> pivot(rowKey: ["_time"], columnKey: ["node_name"], valueColumn: "_value")
---
from(bucket: "sample")
  |> range(start: -1m)
  |> filter(fn: (r) => r["_measurement"] == "resource")
  |> filter(fn: (r) => r["_field"] == "disk-usage")
  |> drop(columns: ["_start","_stop","node_name","pod_name","container_name"])
  |> group(columns: ["app_name"])
  |> aggregateWindow(every: 10s, fn: sum, createEmpty: false)
  |> group()
  |> pivot(rowKey: ["_time"], columnKey: ["app_name"], valueColumn: "_value")

# |> drop(columns: ["_start","_stop","app_name","pod_name","container_name"])

